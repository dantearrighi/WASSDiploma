<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAACAgAAABACAAqBAAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAbUAsAARF2wBff5oASo/TAKx0AAC2jmwA9dqmAPDQiwAAAAAAqn9eAIhg
        SAD/9dYA3LaNAO7n5ADQs48Ai2QcAMesjADJngIA2dvgAMiifgCec1UArpaNAMuXOgCvhx0Ah19EAH1U
        PgDu2roA586uAM2dHAC9iQQAlnVlAP///wDht20Ah1oXAFmm9wCkfhsA/8yZAPzu2gD/77wAF0nAAJFs
        NwDVvZsAq3QTAN67lACpg2UA0K8KALybewDXsR4A3LNFAJ6BeACvixcAx5gsAOK7ZwB3TTgA9darAJJp
        SQD537YA4MymAI5lJgCC0/8A576TAPfz7QChc1IAuaksAKGXNwC+mg4A7NzLAPz59AC6fwAAyosAANes
        TwCdayYARJP/ALiScgDFu7sAe4BbAGyCgQBzSDMArZSBAD5kpQAAAAAA//THAOrFnADSrIUA/9akALuD
        EwCDWkIAxKcQAOjUsgD/57UAsoAmABBc7gCUbhsAza2KAOfFfgB9VTAA1q0IAObCWgC3fAAA78+VAP/7
        6ACxiBEA0bWTAMykfwDNnkYAjWhUAP3ivQCBVjwAw4wXAMWadQCshGEA9/HtAOzNpQCiejMAh2VaAP/e
        rADLmwoAnWoiAKyFFgDbzcEAj2EwAO3ElwC7pJAAtZRrAPnmwwDev5kA6N7XAMmrFgCjhXIA5beLAP/v
        xgCpgjEAdEs2AOm3hwDMpIMA9+3gAMSeEgD/16wA/+CzAN26NQC6lBcA1raSAMWtEACQaR4AxK6gAL+U
        MwCsoDQA+Pr9AMWRBgD//tYAjWM8AOa/eQDbsVIAgVUrANWiOADcqXsAo4VDANXHvgBOdqcAtYRjAP/X
        oAC4hTAAm3tqAPTMngC+lAsA+ebPAIlePwDGnnkA//nOAMylEABtRDAAj2cfAMOiCwDFhwAA68ecAP/n
        vQCUa1EAlXAdANC0FACmeVoA068QANy4kQD004kAnnIyALWAAgC3lRIAz6QEAJhrMADbxaQA///2AIZs
        JwDOrYQApHIkALKbhwDWrYwA99a2AO/AkwC8kW0AAE7pALuOagCqeCYA3q+DAIRaNQC1ghYA+vHpAHtR
        OwCLY0oA/u7LAI1jQQCcdloAq4lkALqScABrSjEA/92mANazjgB/V0MAw6eGALB+AwCpf2EAg1o5APnQ
        oQDm390A0JoOAMuqEACSbCEA1rUQAOfPqAD/+N4A9/f1AO3WtgD///IAkGs/AM6lCACZcycA6saFANG6
        lgCnjHYAvZYOAMquFwDu6+YAw50FAPrfugDBjQUAhVsgAKWEawDWsyYAzZgoAL6AAADOlAAA2KtaAObJ
        oQDQokwAxZQZAMqacwDl0bsA+siXAFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQ
        UFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFDX19fX19fX19fX11BQUFBQUFBQUFBQUFBQ
        UFBQUFDX19cZNRkZTU1NTTU1GdfX11BQUFBQUFBQUFBQUFDX19fNzc7azrAuLi4FLBQZNTUZ19fXUFBQ
        UFBQUFBQ19fNzgUrcFlJ0YKCgoKvOOKNBc4ZzdfXUFBQUFBQUFZWCi6jioqKr9YKcK+vgoKCUVFRag6w
        zddQUFBQUFBQVlYpgllZWXNzUlYrr682Nq+vgqiVlTiwzddQUFBQUFZrLiUM023TPHNUzVMmE83NXYKC
        KRBYqH0ZGVBQUFBQGDf+pXkMDAzc1VQKbVmzhITaqI1NANFRr9HNUFBQUFAYbod8K6dnZ6fcVLDH1cVN
        TW0mZ6rNCoKCE4RQUFBQGBgTb2qu1gwMDHNUsMWg/8nJJNV5sFYugoJ9VlZQUFAKpik9rzxnv79nwnOw
        xVRU1dWgJFRUc1lZrzY311BQUM6mG+Sv+o2NjY21irDFc4Gzs4UkJCTcc4qKirDXUFBQzs7lk8/6XQ4O
        DoqKGKdZ2qqqbtWBzs0FioqKsM1QUFDO0BqTC+JmZmZmODjNUybaqqpuc/1NzRiJiYqzzVBQUDfQWJPj
        4mZmZsOCcFa1WTwJCYWgmzWqFFRUc5/NUFBQNze8vWQ52BDY4lGNCq5zc3Nzc3PDjYbEoKCgn81QUFA3
        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
        k///3az//tSm/3pRO//Sq4T//+27/8iifv97UTz/fFM8/82tiv//8cb//enB/9W9m//HrIz/69ey///5
        zv/ev5n/fVM9/4BXQP+AV0B8AAAAAAAAAAAAAAAAiWBEIIRbQOWTZ0b/5dG7//nmz//txJf/27SN/963
        jv/asor/+dCh///bqf//0qL/iWBH/8Wadf//6LP/oXhb/3RLNv9ySDT/p4Bi///5yf/YuZX/c0gz/21A
        LP+ZdVv///XL///ovf+ed1v/elA6/4BXQLOAV0AEAAAAAAAAAACKYUVLhVs//6yEYf/37eD/+eTH/+K6
        kP/Hn3v/y6N//8ykf//GnXj/+8+g///Vo/+Ua0//u45q///dqP+8kGz/cEg0/3FINP/BmHT//++8/8qk
        gP9vRDD/ek86/4hgSP//78f///XK/8Wjgf91Szb/gFdA6oBXQCMAAAAAAAAAAItjRoqHXT//xKGA//Pv
        6v/94r3/68ec/9i0jv/cto//27WO/9y2jf//3Kv//9Wk/5NqT/+8j2z//9Wh//rIl//er4P/37CF//vM
        m///2af/68GW/5RrUf+CWUH/vJt7///txP//8cb/37+Z/4JYQP99VT3/gFdAPgAAAAAAAAAAjGRGr4le
        P//au5r/8/Ly//3mv//kwZf/yqWB/8+phP/PqYP/y6N+/9aviP//3Kz/k2pP/7yRbf//1qP//9Sg///f
        p///36j//9Kf///Nm///1KL//9mn///crf//5bj//+S5///pvf/11qv/j2ZM/3xSPP+AV0BoAAAAAAAA
        AACOZkfQi2BA/+fOrv/09fr//ujB/+nLov/VtZD/2LiT/9i3kv/Vso3/3LiR///fsP+Ua1H/u5Fu///d
        qv/lt4v/pnla/6d7XP/ntYj//9Cc///Qnf/8z53/+M+g///crv//4LP//+O2///htP+VbVL/elE7/4BX
        QI8AAAAAAAAAAI9nSMyLYUH/7da2//b4+//+7sv/5smh/82tiv/SsY3/0bCL/9KwjP//4rX//9yv/4df
        Rv/Gnnn//+m1/6l/YP9tRTL/bEUy/6+DYf//3ab/6LiK/41jSf97Uzz/to5s///esP//3bD//+a3/5dv
        VP96UDr/gFdAlwAAAAAAAAAAkWhIzI1jQf/u2rr/+Pr9//3z1f/nz6j/0bWT/9W5lv/WuZX/z6+N//vd
        sv/+3rL/elE8/9Kshf//7br/qYBh/21EMP9sRTL/sINi///iqv/KmnP/b0cz/3tSPP+IXkX//9io///Z
        qv//4bH/onlb/3pRO/+AV0C7AAAAAAAAAACSaUnQjmRC/+jUsv/8/Pv//fXg/+jRqv/RtZP/1bmW/9Cz
        j//12rL//+7C/+zMo/+CWUL/3biQ///mtP/mvZH/qX5f/6p/Xv/pt4f//9eg/9ype/93TDb/bkUx/55z
        Vf//1qT//9Sk///cq/+xh2b/elE7/4BXQNAAAAAAAAAAAJNrSayPZUP/28Wk////+v/9++3/4Mym/8Op
        if/Iro3/w6eG/+rRq///88f/1raS/4phSP/rxpr//96s///aqP//3qz//9yq///XrP/71a3/99a2/9m0
        lf/MpIP/78CT///Rnv//0Zz//9ml/7GGZf96Ujz/gFdAzAAAAAAAAAAAk2tKj5BmQ//Rupb////5//z5
        9P///NL////Z///+1P///NL///DE///ww/+8m3j/kmpR//rfuv/+6c3/+u3c//rx6f/38e3/6eHc/+je
        1//m393/7ufk//f39f/u6+b/7NzL//PVtf//16b/rYFg/3pSPP+AV0DLAAAAAAAAAACUbUpskGZE/8On
        gP////b//v7////76P//99n///XW///22P//+N7////y/6aFcP+be2r/+/jz/9vNwf/ErqD/sJaG/6OF
        cv+cd17/nHZa/5l1Xf+WdWX/noF4/66Wjf/Fu7v/2dvg///iwP+hc1L/e1I8/4BXQKUAAAAAAAAAAJRt
        SjSQZ0T+q4lk////8/////////////////////7/9/Pt/+jh2//Vx77/i2dU/4ljTP+NaFT/hFs3/4lf
        Kv+JYSH/i2Qc/5RvHP+VcB3/lG4b/49nH/+FWyD/gVUr/3lQPf+HZVr/yqSH/5ZqTf99VD3/gFdAmgAA
        AAAAAAAAlGtJG5VsSdyLY0j/pIZv/7Kbh/+7pJD/rZSB/6eMdv+cfGH/imVD/31VMP+IYjD/mXMn/6R+
        G/+vixf/t5US/7+eDv/DpA7/xKcQ/8WoEv/FqBP/yqoK/8KiC/+3lBP/rIUW/45lJv9ySDT/eE48/4JZ
        Qf+AV0B8AAAAAAAAAACLYkoDlm5NsI9mP/+HWhf/jmUb/5FsIP+QaR7/kmwh/513Hf+qhhv/upQX/8Se
        Ev/IpBD/y6kO/8uqEP/KqRL/yKkT/8iqFf/Jqxb/yq4X/9C0FP+5qSz/PmSl/xdJwP97gFv/w6IL/6R8
        Ff+DWjn/gFhC/39WQFoAAAAAAAAAAAAAAACVbE6Bl3FF/7GIEf/XsR7/1rMm/9CvCv/UsQ7/07AQ/9Ov
        EP/SrRH/zqgQ/8ylEP/Kog7/x54O/8OaDf/Alwz/vpQL/72VDP+9lg7/yZ4C/19/mv9Ek///AE7p/wRF
        2/+soDT/w50F/5FsN/+AV0P9flRANAAAAAAAAAAAAAAAAJRsSkeVcEv9r4cd/+bCWv/004n/3bo1/9Kp
        Bv/PpAT/0KQM/86hDP/Lmwr/yJcI/8WRBv/BjQX/vYkE/7mEA/+1gAL/sn8C/7B+A/+4gAD/Tnan/4LT
        //9Zpvf/EFzu/6GXN/+/mg7/kGs//4BXQd18UkAbAAAAAAAAAAAAAAAAkWdJDZJsTOqiejP/zZ0c//DQ
        i//54bn/7M+J/9yzRf/Qmg7/y5AA/8qLAP/FhwD/woMA/76AAP+6fwD/t3wA/7N5AP+wdwD/rHQA/6xy
        AP+GbCf/So/T/1am+f9sgoH/vpoO/7OOLv+IY0P/f1ZAp3lLQAIAAAAAAAAAAAAAAAAAAAAAkGlInZBp
        S/+ecS3/vIcT/9uxUv/12qb/+ebD//fkwv/02av/6seB/96xVf/Vojj/zZgo/8eQGv/DjBf/v4oW/7uG
        FP+5hBX/tYIW/7uDE/+pgjH/o4VD/8eYLP+/lDP/lG8//4NbQP9/VkBtAAAAAAAAAAAAAAAAAAAAAAAA
        AACOZUcajmZIvoxkTP+QZUL/nWsm/6t0E//DkC7/16xP/+K7Z//nxX7/7cyP/+7Nkv/vz5X/6saF/+a/
        ef/ku3P/4bdt/9irWv/Qokz/zZ5G/8uXOv+4hTD/nnIy/4liP/+CWkH/gFhA5X9WQBQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACJYUIEjWVGVI1kScKKY03timNK/41jPP+PYTD/lWMj/51qIv+kciT/qngm/7KA
        Jv+xgSz/sYEs/7KALP+rey7/pngz/5hrMP+KXzD/hFo1/4JZPP9/V0P/gVhB+YBYQLt/V0AsAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI1jRSeLY0dkiWJJiolhSbOJYUnUh19H9Yde
        Rf+GXUX/hVxE/4RbQ/+DW0P/gltD/4NaQ/+CWUP/glpD/4FZRPqBWUTVgVhCsYFYQXt/VkA8AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhVw/BIph
        RBeJYEQqiWBFNohfRV6IX0Rmh15EZIdeQ2SGXUNkhVxDZIRbQmSEXEJAgllCLYNaQBiCWUEDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//////+AB//+AAD/+AAAH/AAAA/gAAAHwAAAB8AA
        AAOAAAADgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAAAAGAAAABgAAAAYAA
        AAHAAAABwAAAAcAAAAHgAAAD4AAAA/AAAAf+AAAf/8AAf/////8=
</value>
  </data>
</root>